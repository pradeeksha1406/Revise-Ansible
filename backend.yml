- name: backend
  hosts: all
  become: yes
  tasks:
    - name: Verify NodeJS
      ansible.builtin.shell: type npm
      register: npm
      ignore_errors: yes

    - name: Install NodeJS
      ansible.builtin.shell: curl -sL https://rpm.nodesource.com/setup_lts.x | bash
      when: npm.rc != 0

    - name: Install NodeJS
      ansible.builtin.dnf:
        name: nodejs
      when: npm.rc != 0

    - name: copy backend service
      ansible.builtin.template:
        src: backend.service
        dest: /etc/systemd/system/backend.service

    - name: Add application user
      ansible.builtin.user:
        name: expense

    - name: removing default backend code
      ansible.builtin.file:
        path: /app
        state: absent

    - name: Creating  directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: download backend and extract the code
      ansible.builtin.unarchive:
        src: https://expense-artifacts.s3.amazonaws.com/backend.zip
        dest: /app
        remote_src: yes

    - name: Install NodeJs dependecies
      ansible.builtin.shell: npm install
      args:
        chdir: /app

    - name: Install MYSQL client
      ansible.builtin.dnf:
        name: mysql

    - name: load the schema
      ansible.builtin.shell: mysql -h 172.31.82.77 -uroot -pExpenseApp@1 < /app/schema/backend.sql

    - name: starting backed service
      ansible.builtin.systemd:
        name: backend
        state: restarted
        enabled: yes
        daemon-reload: yes